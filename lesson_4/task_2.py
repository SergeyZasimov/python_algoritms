# 2). Написать два алгоритма нахождения i-го по счёту простого числа. 
# Функция нахождения простого числа должна принимать на вход натуральное и возвращать 
# соответствующее простое число. Проанализировать скорость и сложность алгоритмов.

# Первый — с помощью алгоритма «Решето Эратосфена».
# Примечание. Алгоритм «Решето Эратосфена» разбирался на одном из прошлых уроков. 
# Используйте этот код и попробуйте его улучшить/оптимизировать под задачу.

# Второй — без использования «Решета Эратосфена».

n = int(input('Введите номер элемента '))

def sieve(n):
    N = ((n)**2)

    a = [0] * N

    for i in range(N): 
        a[i] = i 

    a[1] = 0

    m = 2  
    while m < N:  
        if a[m] != 0:  
            j = m * 2  
            while j < N:
                a[j] = 0  
                j = j + m  
        m += 1

    b = []
    for i in a:
        if a[i] != 0:
            b.append(a[i])

#     print(b)
    return (b[n - 1])



def prime(n):
    nums = []
    N = 2
    while len(nums) < n:
        for i in range(2, N):
            if N % i == 0:
                break
        else:
            nums.append(N)
        N += 1
    # print(nums)
    return (nums[n - 1])

print(sieve(n))
print(prime(n))
